pub const std = @import("std");

// TODO: make an enum and allow bitwise math somehow
pub const SR_CUMASK : u32 = 0xf0000000;
pub const SR_CU3 : u32 = 0x80000000;
pub const SR_CU2 : u32 = 0x40000000;
pub const SR_CU1 : u32 = 0x20000000;
pub const SR_CU0 : u32 = 0x10000000;
pub const SR_RP : u32 = 0x08000000;
pub const SR_FR : u32 = 0x04000000;
pub const SR_RE : u32 = 0x02000000;
pub const SR_ITS : u32 = 0x01000000;
pub const SR_BEV : u32 = 0x00400000;
pub const SR_TS : u32 = 0x00200000;
pub const SR_SR : u32 = 0x00100000;
pub const SR_CH : u32 = 0x00040000;
pub const SR_CE : u32 = 0x00020000;
pub const SR_DE : u32 = 0x00010000;
pub const SR_IMASK : u32 = 0x0000ff00;
pub const SR_IMASK8 : u32 = 0x00000000;
pub const SR_IMASK7 : u32 = 0x00008000;
pub const SR_IMASK6 : u32 = 0x0000c000;
pub const SR_IMASK5 : u32 = 0x0000e000;
pub const SR_IMASK4 : u32 = 0x0000f000;
pub const SR_IMASK3 : u32 = 0x0000f800;
pub const SR_IMASK2 : u32 = 0x0000fc00;
pub const SR_IMASK1 : u32 = 0x0000fe00;
pub const SR_IMASK0 : u32 = 0x0000ff00;
pub const SR_IBIT8 : u32 = 0x00008000;
pub const SR_IBIT7 : u32 = 0x00004000;
pub const SR_IBIT6 : u32 = 0x00002000;
pub const SR_IBIT5 : u32 = 0x00001000;
pub const SR_IBIT4 : u32 = 0x00000800;
pub const SR_IBIT3 : u32 = 0x00000400;
pub const SR_IBIT2 : u32 = 0x00000200;
pub const SR_IBIT1 : u32 = 0x00000100;
pub const SR_KX : u32 = 0x00000080;
pub const SR_SX : u32 = 0x00000040;
pub const SR_UX : u32 = 0x00000020;
pub const SR_KSU_MASK : u32 = 0x00000018;
pub const SR_KSU_USR : u32 = 0x00000010;
pub const SR_KSU_SUP : u32 = 0x00000008;
pub const SR_KSU_KER : u32 = 0x00000000;
pub const SR_ERL : u32 = 0x00000004;
pub const SR_EXL : u32 = 0x00000002;
pub const SR_IE : u32 = 0x00000001;


pub const FPCSR_FS : u32 = 0x01000000;
pub const FPCSR_C : u32 = 0x00800000;
pub const FPCSR_CE : u32 = 0x00020000;
pub const FPCSR_CV : u32 = 0x00010000;
pub const FPCSR_CZ : u32 = 0x00008000;
pub const FPCSR_CO : u32 = 0x00004000;
pub const FPCSR_CU : u32 = 0x00002000;
pub const FPCSR_CI : u32 = 0x00001000;
pub const FPCSR_EV : u32 = 0x00000800;
pub const FPCSR_EZ : u32 = 0x00000400;
pub const FPCSR_EO : u32 = 0x00000200;
pub const FPCSR_EU : u32 = 0x00000100;
pub const FPCSR_EI : u32 = 0x00000080;
pub const FPCSR_FV : u32 = 0x00000040;
pub const FPCSR_FZ : u32 = 0x00000020;
pub const FPCSR_FO : u32 = 0x00000010;
pub const FPCSR_FU : u32 = 0x00000008;
pub const FPCSR_FI : u32 = 0x00000004;
pub const FPCSR_RM_MASK : u32 = 0x00000003;
pub const FPCSR_RM_RN : u32 = 0x00000000;
pub const FPCSR_RM_RZ : u32 = 0x00000001;
pub const FPCSR_RM_RP : u32 = 0x00000002;
pub const FPCSR_RM_RM : u32 = 0x00000003;
